import org.apache.camel.model.rest.RestBindingMode

onCompletion().bean("logService", "writeJournal");

onException(Exception.class).bean("exceptionHandler", "handleException");

restConfiguration().component("servlet").bindingMode(RestBindingMode.json)
    .dataFormatProperty("prettyPrint", "true").apiContextPath("/api-doc")
    .apiProperty("api.title", "User API").apiProperty("api.version", "1.0.0").apiProperty("cors", "true");

rest("rest/{type}").id("rest-interfaces").description("rest interface for transaction processing")
    .consumes("application/json")
    .produces("application/json")
    .get("/")
    .route()
    .setHeader('channel').simple('rest')
    .process { exchange ->
        println "type=" + exchange.in.headers['type']
        println "Content-Type=" + exchange.in.headers['Content-Type']
    }
    .to('direct:rest-transaction-service')
    .process { exchange ->
        def responseMessage = exchange.in.body
        println "response:$responseMessage"
    }
    .endRest()