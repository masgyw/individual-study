直播运营活动中经常会有这样的需求，根据用户送礼情况做排名。
这个排行榜具有以下特点：

1、用户每次请求会返回用户的排名
2、送礼金额越多粉丝排名越靠前
3、相同金额送礼越早越靠前
4、排行榜会随着粉丝送礼变化而不断变化

-- 表结构
CREATE TABLE `user` (
  `id` int(10) NOT NULL COMMENT '编号',
  `uid` varchar(32) NOT NULL COMMENT '用户',
  `coin` int(10) NOT NULL COMMENT '用户送出金额',
  `create_time` datetime NOT NULL COMMENT '创建时间',
  `update_time` datetime NOT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uid` (`uid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='用户表';


使用的数据结构：
String 存储用户信息：
key：user_uid
value:{"id":"1","uid":"1","coin":"12","create_time":"2019-1-1","update_time":"2019-1-1"}

Zset 存储排行榜信息
key 名称 user_rank
value 用户信息key
score coin值

zset的相关api (PipelineCluster/Jedis)

插入或者更新数据
Long zadd(final String key, final double score, final String member)
key : 排行榜的名字
memeber : 用户
score : 用户的分数
获取用户分数
Double zscore(String key, final String member)
获取用户的排名
Long zrevrank(final String key, final String member)：（score从大到小，从0开始，所以需要加1）
Long zrank(final String key, final String member)：（score从小到大，从0开始，所以需要加1）
获取某个范围内的用户排名
Set<Tuple> zrevrangeWithScoresBytes(String key, final long start, final long end)  （从大到小）
Set<Tuple> zrangeWithScoresBytes(String key, final long start, final long end)  （从小到大）
start ： 开始排名
end ： 结束排名
Tuple :

public class Tuple implements Comparable<Tuple> {
    // 用户
    private byte[] element;
    //分数
    private Double score;
}

比如我们想查1-10的排名，我们可以zrevrangeWithScoresBytes(key, 0, 9)

简单排行榜实现：
1.简单：每次用户信息更新后，把uid 和 coin 都更新到zset中，比较简单，但是不能实现先到先得；
2.较复杂：coin*10的10次方+(10的十一次方-ts),时间戳是10位，倒序排时，时间越小的在前面，那么就需要是差值计算
zset score 最大支持18位，所以coin的最大值就只有8位了，此时只能更改时间戳，相同年的前3位数字是一致的，所以呢，
可以截取后七位作为时间戳字段；
